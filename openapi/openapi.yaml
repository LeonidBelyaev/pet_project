openapi: 3.0.0
info:
  title: API
  version: 1.0.0
paths:
  /api/tasks:
    get:
      summary: Get all tasks
      tags:
        - tasks
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
    post:
      summary: Create a new task
      tags:
        - tasks
      requestBody:
        description: The task to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: The created task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
  /api/tasks/{id}:
    patch:
      summary: Update a task by ID
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      requestBody:
        description: The task data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: The updated task
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Task not found
    delete:
      summary: Delete a task by ID
      tags:
        - tasks
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
  /users:
    get:
      summary: Get all users
      tags:
        - users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Users'
    post:
      summary: Create new user
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
  /users/{id}:
    patch:
      summary: Update a user by ID
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      requestBody:
        description: The user data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Users'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '404':
          description: User not found
    delete:
      summary: Delete a user by ID
      tags:
        - users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found
  /users/{id}/tasks:
    get:
      summary: Get all tasks for users
      tags: -users
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: uint
      responses:
        '200':
          description: A list of tasks for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '404':
          description: User not found








components:
  schemas:
    Message:
      type: object
      properties:
        id:
          type: integer
          format: uint
        task:
          type: string
        is_done:
          type: boolean
        user_id:
          type: integer
          format: uint
          description: ID of the user who owns the task
    Users:
      type: object
      properties:
        id:
          type: integer
          format: uint
        email:
          type: string
        password:
          type: string
        tasks:
          type: array
          items:
            $ref: '#/components/schemas/Message'
          description: List of tasks owned by the user








